[user]
    name = Herman Fries
    email = baracoder@googlemail.com

[core]
    editor = vim
    excludesfile = ~/.gitignore

[merge]
    tool = meld
[mergetool "ediff"]
    cmd = meld

[fetch]
    prune = true

[diff]
    tool = meld

[color]
    ui = auto
    diff = auto
    status = auto
    branch = auto

[alias]
    # github pr management
    pr  = "!f() { git fetch -fu ${2:-$(git remote |grep ^upstream || echo origin)} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
    pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
    # gitlab mr
    mr = !sh -c 'git fetch $1 merge-requests/$2/head:mr-$1-$2 && git checkout mr-$1-$2' -


    st = status
    ci = commit
    cm = commit -m # commit text als parameter
    co = checkout
    pl = pull # pull mit merge  ausführen
    plr = pull --rebase # pull mit rebase ausführen
    f = fetch
    ps = push
    b = branch
    m = merge
    dt = difftool
    mt = mergetool
    unstage = reset HEAD -- # Datei aus index entfernen

    vis = !gitk --all & # Visualisierungen:
    tig = !tig --all # "git-gui", "gitk und "tig" müssen
    num = shortlog -s -n # vielleicht nachinstalliert werden
    g = !git gui &
    lol = log --graph --decorate --pretty=oneline --abbrev-commit --all

    # readonly server zum verteilen im lokalen netz
    # mit
    #   git pull git://HOSTNAME/
    # zugreifen
    serve = daemon --reuseaddr --base-path=.git --export-all --verbose

    dif = diff # Abkürzungen für typos
    psuh = push
    psh = push

# weitere git-tipps: http://gitready.com/
[push]
	default = current

[include]
    path = ~/.gitconfig.local
[includeIf "gitdir:~/tibber/"]
    path = ~/.gitconfig.work

[gc]
	autoDetach = false
[gpg]
	program = gpg
[commit]
	gpgSign = false
[tag]
	forceSignAnnotated = false
[pull]
	rebase = true
[init]
	defaultBranch = main
[credential]
	helper = store

[rebase]
	autoStash = true

[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
